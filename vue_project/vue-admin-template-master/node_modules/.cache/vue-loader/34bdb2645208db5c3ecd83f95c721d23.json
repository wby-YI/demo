{"remainingRequest":"C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\src\\views\\product\\Attr\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\src\\views\\product\\Attr\\index.vue","mtime":1652800575985},{"path":"C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652600907899},{"path":"C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1652600964560},{"path":"C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652600907899},{"path":"C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1652600973833}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/product/Attr","sourcesContent":["<template>\n  <div>\n    <el-card style=\"margin: 20px 0px\">\n      <CategorySelect @getCategoryId=\"getCategoryId\" :show=\"!isShowTable\"></CategorySelect>\n    </el-card>\n    <el-card>\n      <div v-show=\"isShowTable\">\n        <el-button\n          type=\"primary\"\n          icon=\"el-icon-plus\"\n          :disabled=\"!category3Id\"\n          @click=\"addAttr\"\n          >添加属性</el-button\n        >\n        <!-- 表格:展示平台属性 -->\n        <el-table style=\"width: 100%\" border :data=\"attrList\">\n          <el-table-column type=\"index\" label=\"序号\" width=\"80\" align=\"center\">\n          </el-table-column>\n          <el-table-column prop=\"attrName\" label=\"属性名称\" width=\"150\">\n          </el-table-column>\n          <el-table-column prop=\"prop\" label=\"属性值列表\" width=\"width\">\n            <template slot-scope=\"{ row, $index }\">\n              <el-tag\n                type=\"success\"\n                v-for=\"(attrValue, index) in row.attrValueList\"\n                :key=\"attrValue.id\"\n                style=\"margin: 0px 20px\"\n                >{{ attrValue.valueName }}</el-tag\n              >\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"prop\" label=\"操作\" width=\"150\">\n            <template slot-scope=\"{ row, $index }\">\n              <el-button\n                type=\"warning\"\n                icon=\"el-icon-edit\"\n                size=\"mini\"\n                @click=\"updateAttr(row)\"\n              ></el-button>\n              <el-button\n                type=\"danger\"\n                icon=\"el-icon-delete\"\n                size=\"mini\"\n              ></el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </div>\n      <!-- 添加属性|修改属性的结构 -->\n      <div v-show=\"!isShowTable\">\n        <el-form :inline=\"true\" ref=\"form\" label-width=\"80px\" :model=\"attrInfo\">\n          <el-form-item label=\"属性名\">\n            <el-input\n              placeholder=\"请输入属性名\"\n              v-model=\"attrInfo.attrName\"\n            ></el-input>\n          </el-form-item>\n        </el-form>\n        <el-button\n          type=\"primary\"\n          icon=\"el-icon-plus\"\n          @click=\"addAttrValue\"\n          :disabled=\"!attrInfo.attrName\"\n          >添加属性值</el-button\n        >\n        <el-button @click=\"isShowTable = true\">取消</el-button>\n        <el-table\n          style=\"width: 100%; margin: 20px 0px\"\n          border\n          :data=\"attrInfo.attrValueList\"\n        >\n          <el-table-column align=\"center\" type=\"index\" label=\"序号\" width=\"80\">\n          </el-table-column>\n          <el-table-column width=\"width\" prop=\"prop\" label=\"属性值名称\">\n            <template slot-scope=\"{ row, $index }\">\n              <!-- 这里结构需要用到span与input进行来回的切换 -->\n              <el-input\n                v-model=\"row.valueName\"\n                placeholder=\"请输入属性值名称\"\n                size=\"mini\"\n                v-if=\"row.flag\"\n                @blur=\"toLook(row)\"\n                @keyup.native.enter=\"toLook(row)\"\n                :ref=\"$index\"\n              ></el-input>\n              <span\n                v-else\n                @click=\"toEdit(row, $index)\"\n                style=\"display: block\"\n                >{{ row.valueName }}</span\n              >\n            </template>\n          </el-table-column>\n          <el-table-column width=\"width\" prop=\"prop\" label=\"操作\">\n            <template slot-scope=\"{ row, $index }\">\n              <!-- 气泡确认框 -->\n              <el-popconfirm :title=\"`确定删除${row.valueName}?`\" @onConfirm=\"deleteAttrValue($index)\">\n                <el-button\n                  type=\"danger\"\n                  icon=\"el-icon-delete\"\n                  size=\"mini\"\n                  slot=\"reference\"\n                ></el-button>\n              </el-popconfirm>\n            </template>\n          </el-table-column>\n        </el-table>\n        <el-button type=\"primary\" @click=\"addOrUpdateAttr\" :disabled=\"attrInfo.attrValueList.length<1\">保存</el-button>\n        <el-button @click=\"isShowTable = true\">取消</el-button>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\n//按需引入lodash当中的深拷贝\nimport cloneDeep from \"lodash/cloneDeep\";\nexport default {\n  name: \"Attr\",\n  data() {\n    return {\n      category1Id: \"\",\n      category2Id: \"\",\n      category3Id: \"\",\n      //接受平台属性的数据\n      attrList: [],\n      //这个属性控制table表格显示与隐藏的\n      isShowTable: true,\n      //收集新增属性|修改属性使用的\n      attrInfo: {\n        attrName: \"\", //属性名\n        attrValueList: [\n          //属性值，因为属性值可以有多个，因此用数组，每一个属性值都是一个对象，需要attrId，valueName\n        //  {\n        //     attrId: 0,          //相应的属性名的id\n        //     valueName: \"\",  //属性值\n        //  }\n        ],\n        categoryId: 0, //三级分类的id\n        categoryLevel: 3, //因为服务器也需要区分几级id\n      },\n    };\n  },\n  methods: {\n    //自定义事件的回调\n    getCategoryId({ categoryId, level }) {\n      // console.log(categoryId);\n      //区分三级分类相应的id，以及父组件进行存储\n      if (level == 1) {\n        this.category1Id = categoryId;\n        this.category2Id = \"\";\n        this.category3Id = \"\";\n      } else if (level == 2) {\n        this.category2Id = categoryId;\n        this.category3Id = \"\";\n      } else {\n        //代表三级分类的id有了\n        this.category3Id = categoryId;\n        //发请求获取平台的属性数据\n        this.getAttrList();\n      }\n    },\n    //获取平台属性的数据\n    //当用户确定三级分类的数据时候，可以向服务器发请求获取平台属性进行展示\n    async getAttrList() {\n      //获取分类的ID\n      const { category1Id, category2Id, category3Id } = this;\n      //获取属性列表的数据\n      let result = await this.$API.attr.reqAttrList(\n        category1Id,\n        category2Id,\n        category3Id\n      );\n      // console.log(result);\n      if (result.code == 200) {\n        this.attrList = result.data;\n      }\n    },\n    //添加属性值回调\n    addAttrValue() {\n      //向属性值的数组里面添加元素\n      //attrId：是你相应的属性的id，目前而言我们是添加属性的操作，还没有相应的属性的id，目前而言带给服务器的id为undefined\n      //valueName:相应的属性值的名称\n      this.attrInfo.attrValueList.push({\n        attrId: this.attrInfo.id, //对于修改某一个属性的时候，可以在已有的属性值基础之上新增新的属性值（新增属性值的时候，需要把已有的属性的id带上）\n        valueName: \"\",\n        flag: true,\n      });\n      //flag属性：给每一个属性值添加一个标记flag，用户切换查看模式与编辑模式，好处，每一个属性值可以控制自己的模式切换\n      //当前flag属性，响应式数据（数据变化视图跟着变化）\n      this.$nextTick(() => {\n        this.$refs[this.attrInfo.attrValueList.length - 1].focus();\n      });\n    },\n    //添加属性按钮的回调\n    addAttr() {\n      //切换table显示与隐藏\n      this.isShowTable = false;\n      //清除数据\n      //收集三级分类的id\n      this.attrInfo = {\n        attrName: \"\", //属性名\n        attrValueList: [\n          //属性值，因为属性值可以有多个因此用数组，每一个属性值都是一个对象需要attrId，valueName\n        ],\n        categoryId: this.category3Id, //三级分类的id\n        categoryLevel: 3, //因为服务器也需要区分几级id\n      };\n    },\n    //修改某一个属性\n    updateAttr(row) {\n      //isShowTable变为false\n      this.isShowTable = false;\n      //将选中的属性赋值给attrInfo\n      //由于数据结构当中存在对象里面套数组，数组里面又套对象，因此需要使用深拷贝解决这类问题\n      //深拷贝，浅拷贝在面试的时候出现频率很高，切记达到手写深拷贝与浅拷贝\n      this.attrInfo = cloneDeep(row);\n      //在修改某一个属性的时候，将相应的属性值元素添加上flag这个标记\n      this.attrInfo.attrValueList.forEach((item) => {\n        //这样书写也可以给属性值添加flag自动，但是会发现视图不会跟着变化（因为flag不是响应式数据）\n        //因为Vue无法探测普通的新增 property,这样书写的属性并非响应式属性（数据变化视图跟着变）\n        //第一个参数:对象  第二个参数:添加新的响应式属性  第三参数：新的属性的属性值\n        this.$set(item, \"flag\", false);\n      });\n    },\n    //失去焦点的事件---切换为查看模式，展示span\n    toLook(row) {\n      // 如果属性值为空不能作为新的属性值，需要给用户提示，让他输入一个其他的属性值\n       if(row.valueName.trim()==''){\n         this.$message('请你输入一个正常的属性值');\n         return;\n       }\n       //新增的属性值不能与已有的属性值重复\n      let isRepat  = this.attrInfo.attrValueList.some(item=>{\n          //需要将row从数组里面判断的时候去除\n          //row最新新增的属性值【数组的最后一项元素】\n          //判断的时候，需要把已有的数组当中新增的这个属性值去除\n          if(row!==item){\n            return row.valueName==item.valueName;\n          }\n       });\n\n       if(isRepat) return;\n      // row：形参是当前用户添加的最新的属性值\n      // 当前编辑模式变为查看模式【让input消失，显示span】\n      row.flag = false;\n    },\n    //点击span的回调，变为编辑模式\n    toEdit(row, index) {\n      row.flag = true;\n      //获取input节点，实现自动聚焦\n      //需要注意：点击span的时候，切换为input变为编辑模式，但是需要注意，对于浏览器而言，页面重绘与重排是耗时间的\n      //点击span的时候，重绘重排一个input它是需要耗费时间的，因此我们不可能一点击span立马获取到input\n      //$nextTick,当节点渲染完毕了，会执行一次\n      this.$nextTick(() => {\n        //获取相应的input表单元素实现聚焦\n        this.$refs[index].focus();\n      });\n    },\n    //气泡确认框确定按钮的回调\n    //最新版本的ElementUI----2.15.6，目前模板中的版本号2.13.2  使用：onConfirm，不能直接使用：confirm\n    deleteAttrValue(index){\n      //当前删除属性值的操作是不需要发请求的\n       this.attrInfo.attrValueList.splice(index,1);\n    },\n    //保存按钮：进行添加属性或者修改属性的操作\n    async addOrUpdateAttr(){\n      //整理参数:\n      //1,如果用户添加很多属性值，且属性值为空的不应该提交给服务器\n      //2.提交给服务器数据当中不应该出现flag字段\n      this.attrInfo.attrValueList = this.attrInfo.attrValueList.filter(item=>{\n          //过滤掉属性值不是空的\n          if(item.valueName!=''){\n            //删除掉flag属性\n            delete item.flag;\n            return true;\n          }\n      })\n      try {\n         //发请求\n        await this.$API.attr.reqAddOrUpdateAttr(this.attrInfo);\n        //展示平台属性的信号量进行切换\n        this.isShowTable = true;\n        //提示消失\n        this.$message({type:'success',message:'保存成功'});\n        //保存成功以后需要再次获取平台属性进行展示\n        this.getAttrList();\n      } catch (error) {\n        // this.$message('保存失败')\n      }\n\n    }\n  },\n};\n</script>\n\n<style scoped>\n</style>\n"]}]}
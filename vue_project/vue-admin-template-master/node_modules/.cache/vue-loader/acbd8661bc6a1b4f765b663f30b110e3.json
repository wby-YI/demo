{"remainingRequest":"C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\src\\views\\product\\Spu\\index.vue?vue&type=template&id=118a5851&scoped=true&","dependencies":[{"path":"C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\src\\views\\product\\Spu\\index.vue","mtime":1653015154295},{"path":"C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652600907899},{"path":"C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1652601002658},{"path":"C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652600907899},{"path":"C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1652600973833}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}
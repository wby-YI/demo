{"remainingRequest":"C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\src\\views\\product\\Spu\\SpuForm\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\src\\views\\product\\Spu\\SpuForm\\index.vue","mtime":1653888705674},{"path":"C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\babel.config.js","mtime":1637306514000},{"path":"C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652600907899},{"path":"C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1652600964560},{"path":"C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652600907899},{"path":"C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1652600973833}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["name","data","dialogImageUrl","dialogVisible","spu","category3Id","description","spuName","tmId","spuImageList","spuSaleAttrList","tradeMarkList","saleAttrList","attrIdAndAttrName","methods","handleRemove","file","fileList","handlePictureCardPreview","initSpuData","spuResult","tradeMarkResult","spuImageResult","listArr","item","saleResult","handlerSuccess","response","addSaleAttr","baseSaleAttrId","saleAttrName","spuSaleAttrValueList","addSaleAttrValue","row","handleInputConfirm","saleAttrValueName","addOrUpdateSpu","imgName","imgUrl","result","type","message","scene","flag","Object","addSpuData","cancel","computed","unSelectSaleAttr"],"sourceRoot":"src/views/product/Spu/SpuForm","sources":["index.vue"],"sourcesContent":["<template>\n  <div>\n    <el-form ref=\"form\" label-width=\"80px\" :model=\"spu\">\n      <el-form-item label=\"SPU名称\">\n        <el-input placeholder=\"SPU名称\" v-model=\"spu.spuName\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"品牌\">\n        <el-select placeholder=\"请选择品牌\" v-model=\"spu.tmId\">\n          <el-option\n            :label=\"tm.tmName\"\n            :value=\"tm.id\"\n            v-for=\"(tm, index) in tradeMarkList\"\n            :key=\"tm.id\"\n          ></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"SPU描述\">\n        <el-input\n          type=\"textarea\"\n          rows=\"4\"\n          placeholder=\"描述\"\n          v-model=\"spu.description\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item label=\"SPU图片\">\n        <!-- 上传图片：action图片上传的地址  list-type: 文件列表的类型 on-preview:图片预览的时候会触发  on-remove:当删除图片的时候会触发 \n         file-list：照片墙需要展示的数据【数组：数组里面的元素务必要有name、url属性】（预览展示）\n         on-preview：图片预览功能\n         on-remove:删除图片的时候会触发\n         on-success：文件上传成功的钩子\n        -->\n        <el-upload\n          action=\"/dev-api/admin/product/fileUpload\"\n          list-type=\"picture-card\"\n          :on-preview=\"handlePictureCardPreview\"\n          :on-remove=\"handleRemove\"\n          :on-success=\"handlerSuccess\"\n          :file-list=\"spuImageList\"\n        >\n          <i class=\"el-icon-plus\"></i>\n        </el-upload>\n        <el-dialog :visible.sync=\"dialogVisible\">\n          <img width=\"100%\" :src=\"dialogImageUrl\" alt=\"\" />\n        </el-dialog>\n      </el-form-item>\n      <el-form-item label=\"销售属性\">\n        <el-select\n          :placeholder=\"`还有${unSelectSaleAttr.length}未选择`\"\n          v-model=\"attrIdAndAttrName\"\n        >\n          <el-option\n            :label=\"unselect.name\"\n            :value=\"`${unselect.id}:${unselect.name}`\"\n            v-for=\"(unselect, index) in unSelectSaleAttr\"\n            :key=\"unselect.id\"\n          ></el-option>\n        </el-select>\n        <el-button\n          type=\"primary\"\n          icon=\"el-icon-plus\"\n          :disabled=\"!attrIdAndAttrName\"\n          @click=\"addSaleAttr\"\n          >添加销售属性</el-button\n        >\n        <!-- 展示的是当前SPU属于自己的销售属性 -->\n        <el-table style=\"width: 100%\" border :data=\"spu.spuSaleAttrList\">\n          <el-table-column\n            type=\"index\"\n            label=\"序号\"\n            width=\"80px\"\n            align=\"center\"\n          >\n          </el-table-column>\n          <el-table-column prop=\"saleAttrName\" label=\"属性名\" width=\"width\">\n          </el-table-column>\n          <el-table-column prop=\"prop\" label=\"属性值名称列表\" width=\"width\">\n            <template slot-scope=\"{ row, $index }\">\n              <!--  \" -->\n              <!-- el-tag:用户展示已有属性值列表的数据的 -->\n              <el-tag\n                :key=\"tag.id\"\n                v-for=\"(tag, index) in row.spuSaleAttrValueList\"\n                closable\n                :disable-transitions=\"false\"\n                @close=\"row.spuSaleAttrValueList.splice(index, 1)\"\n                >{{ tag.saleAttrValueName }}</el-tag\n              >\n              <!-- 底下的结构可以当成咱们当年的span与input切换 -->\n              <!--  @keyup.enter.native=\"handleInputConfirm\"  -->\n              <el-input\n                class=\"input-new-tag\"\n                v-if=\"row.inputVisible\"\n                v-model=\"row.inputValue\"\n                ref=\"saveTagInput\"\n                size=\"small\"\n                @blur=\"handleInputConfirm(row)\"\n              >\n              </el-input>\n              <!-- @click=\"showInput\" -->\n              <el-button\n                v-else\n                class=\"button-new-tag\"\n                size=\"small\"\n                @click=\"addSaleAttrValue(row)\"\n                >添加</el-button\n              >\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"prop\" label=\"操作\" width=\"width\">\n            <template slot-scope=\"{ row, $index }\">\n              <el-button\n                type=\"danger\"\n                icon=\"el-icon-delete\"\n                size=\"mini\"\n                @click=\"spu.spuSaleAttrList.splice($index, 1)\"\n              ></el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"addOrUpdateSpu\">保存</el-button>\n        <el-button @click=\"cancel\">取消</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"SpuForm\",\n  data() {\n    return {\n      dialogImageUrl: \"\",\n      dialogVisible: false,\n\n      //spu属性初始化的时候是一个空的对象,在修改SPU的时候，会向服务器发请求，返回SPU信息（对象），在修改的时候可以利用服务器返回的这个对象收集最新的数据提交给服务器\n      //添加SPU：如果是添加SPU的时候，并没有向服务器发请求，数据收集到哪里？[SPU]，收集数据的时候有哪些字段呢？看文档\n      spu: {\n        //三级分类的id\n        category3Id: 0,\n        //描述\n        description: \"\",\n        //spu名称\n        spuName: \"\",\n        //品牌的id\n        tmId: \"\",\n        //收集SPU图片的信息\n        spuImageList: [\n          // {\n          //   id: 0,\n          //   imgName: \"string\",\n          //   imgUrl: \"string\",\n          //   spuId: 0,\n          // },\n        ],\n        //平台销售属性与属性值收集\n        spuSaleAttrList: [\n          // {\n          //   baseSaleAttrId: 0,\n          //   id: 0,\n          //   saleAttrName: \"string\",\n          //   spuId: 0,\n          //   spuSaleAttrValueList: [\n          //     {\n          //       baseSaleAttrId: 0,\n          //       id: 0,\n          //       isChecked: \"string\",\n          //       saleAttrName: \"string\",\n          //       saleAttrValueName: \"string\",\n          //       spuId: 0,\n          //     },\n          //   ],\n          // },\n        ],\n      },\n      tradeMarkList: [], //存储品牌信息\n      spuImageList: [], //存储SPU图片的数据\n      saleAttrList: [], //销售属性的数据（项目全部的销售属性）\n      attrIdAndAttrName: \"\", //收集未选择的销售属性的id和name-----\n    };\n  },\n  methods: {\n    //照片墙删除某一个图片的时候会触发\n    handleRemove(file, fileList) {\n      //file参数:代表的是删除的那张图片\n      //fileList:照片墙删除某一张图片以后，剩余的其他图片\n      // console.log(file, fileList,22222);\n      //收集照片墙图片的数据\n      //对于已有的图片【照片墙中显示的图片：有name、url字段的】，因为照片墙显示数据务必要有这两个属性\n      //对于服务器而言，不需要name、url字段，将来对于已有的图片的数据在提交给服务器的时候，需要处理的\n      this.spuImageList = fileList;\n    },\n    //照片墙图片预览的回调\n    handlePictureCardPreview(file) {\n      //将图片地址赋值给这个属性\n      this.dialogImageUrl = file.url;\n      //对话框显示\n      this.dialogVisible = true;\n    },\n    //初始化SpuForm数据\n    async initSpuData(spu) {\n      //获取SPU信息的数据\n      let spuResult = await this.$API.spu.reqSpu(spu.id);\n      if (spuResult.code == 200) {\n        //在修改spu的时候,需要向服务器发请求的，把服务器返回的数据（对象），赋值给spu属性\n        this.spu = spuResult.data;\n      }\n      //获取品牌的信息\n      let tradeMarkResult = await this.$API.spu.reqTradeMarkList();\n      if (tradeMarkResult.code == 200) {\n        this.tradeMarkList = tradeMarkResult.data;\n      }\n      //获取spu图片的数据\n      let spuImageResult = await this.$API.spu.reqSpuImageList(spu.id);\n      if (spuImageResult.code == 200) {\n        let listArr = spuImageResult.data;\n        //由于照片墙显示图片的数据需要数组，数组里面的元素需要有name与url字段\n        //需要把服务器返回的数据进行修改\n        listArr.forEach((item) => {\n          item.name = item.imgName;\n          item.url = item.imgUrl;\n        });\n        //把整理好的数据赋值给\n        this.spuImageList = listArr;\n      }\n      //获取平台全部的销售属性\n      let saleResult = await this.$API.spu.reqBaseSaleAttrList();\n      if (saleResult.code == 200) {\n        this.saleAttrList = saleResult.data;\n      }\n    },\n    //照片墙图片上传成功的回调\n    handlerSuccess(response, file, fileList) {\n      //收集图片的信息\n      this.spuImageList = fileList;\n    },\n    //添加新的销售属性\n    addSaleAttr() {\n      //已经收集需要添加的销售属性的信息\n      //把收集到的销售属性数据进行分割\n      const [baseSaleAttrId, saleAttrName] = this.attrIdAndAttrName.split(\":\");\n      //向SPU对象的spuSaleAttrList属性里面添加新的销售属性\n      let newSaleAttr = {\n        baseSaleAttrId,\n        saleAttrName,\n        spuSaleAttrValueList: [],\n      };\n      //添加新的销售属性\n      this.spu.spuSaleAttrList.push(newSaleAttr);\n      //清空数据\n      this.attrIdAndAttrName = \"\";\n    },\n    //添加按钮的回调\n    addSaleAttrValue(row) {\n      //点击销售属性值当中添加按钮的时候，需要由button变为input,通过当前销售属性的inputVisible控制\n      //挂载在销售属性身上的响应式数据inputVisible，控制button与input切换\n      this.$set(row, \"inputVisible\", true);\n      //通过响应式数据inputValue字段收集新增的销售属性值\n      this.$set(row, \"inputValue\", \"\");\n    },\n    //el-input失却焦点的事件\n    handleInputConfirm(row) {\n      //解构出销售属性当中收集数据\n      const { baseSaleAttrId, inputValue } = row;\n      //新增的销售属性值的名称不能为空\n      if (inputValue.trim() == \"\") {\n        this.$message(\"属性值不能为空\");\n        return;\n      }\n      //属性值不能重复,这里也可以用some\n      let result = row.spuSaleAttrValueList.every(\n        (item) => item.saleAttrValueName != inputValue\n        //没重复的为真，重复了的为false\n        //every 只要有一项为false，就为false（这里也就是：只要有重复了的，就返回false）\n      );\n      //重复了的情况：非false为true，就直接return 不执行了\n      if (!result) return;\n      //新增的销售属性值\n      let newSaleAttrValue = { baseSaleAttrId, saleAttrValueName: inputValue };\n      //新增\n      row.spuSaleAttrValueList.push(newSaleAttrValue);\n      //修改inputVisible为false，就显示button\n      row.inputVisible = false;\n    },\n    //保存按钮的回调\n    async addOrUpdateSpu() {\n      //整理参数：需要整理照片墙的数据\n      //携带参数：对于图片，需要携带imageName与imageUrl字段\n      //map 映射已有的数据，return出来的结果赋值给新的数组\n      this.spu.spuImageList = this.spuImageList.map((item) => {\n        return {\n          imgName: item.name,\n          imgUrl: (item.response && item.response.data) || item.url,\n          // imgUrl: item.imgUrl? item.imgUrl: item.response.data,\n        };\n      });\n      //发请求\n      let result = await this.$API.spu.reqAddOrUpdateSpu(this.spu);\n      if (result.code == 200) {\n        //提示\n        this.$message({ type: \"success\", message: \"保存成功\" });\n        //通知父组件回到场景0\n        this.$emit(\"changeScene\", {\n          scene: 0,\n          flag: this.spu.id ? \"修改\" : \"添加\",\n        });\n      }\n      //清除数据\n      Object.assign(this._data, this.$options.data());\n    },\n    //点击添加SPU按钮的时候，发请求的函数\n    async addSpuData(category3Id) {\n      //添加SPU的时候收集三级分类的id\n      this.spu.category3Id = category3Id;\n      //获取品牌的信息\n      let tradeMarkResult = await this.$API.spu.reqTradeMarkList();\n      if (tradeMarkResult.code == 200) {\n        this.tradeMarkList = tradeMarkResult.data;\n      }\n      //获取平台全部的销售属性\n      let saleResult = await this.$API.spu.reqBaseSaleAttrList();\n      if (saleResult.code == 200) {\n        this.saleAttrList = saleResult.data;\n      }\n    },\n    //取消按钮\n    cancel() {\n      //取消按钮的回调，通知父亲切换场景为0\n      this.$emit(\"changeScene\", { scene: 0, flag: \"\" });\n      //清理数据\n      //Object.assign:es6中新增的方法可以合并对象\n      //组件实例this._data,可以操作data当中响应式数据\n      //this.$options可以获取配置对象，配置对象的data函数执行，返回的响应式数据为空的\n      Object.assign(this._data, this.$options.data());\n    },\n  },\n  computed: {\n    //计算出还未选择的销售属性\n    unSelectSaleAttr() {\n      //整个平台的销售属性一共三个：尺寸、颜色、版本 ----saleAttrList\n      //当前SPU拥有的属于自己的销售属性spu.spuSaleAttrList  ----颜色\n      //数组的过滤方法，可以从已有的数组当中过滤出用户需要的元素，并未返回一个新的数据\n      let result = this.saleAttrList.filter((item) => {\n        //every数组的方法，会返回一个布尔值【真，假的】\n        return this.spu.spuSaleAttrList.every((item1) => {\n          return item.name != item1.saleAttrName;\n        });\n      });\n      return result;\n    },\n  },\n};\n</script>\n\n<style>\n.el-tag + .el-tag {\n  margin-left: 10px;\n}\n.button-new-tag {\n  margin-left: 10px;\n  height: 32px;\n  line-height: 30px;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n.input-new-tag {\n  width: 90px;\n  margin-left: 10px;\n  vertical-align: bottom;\n}\n</style>\n"]}]}
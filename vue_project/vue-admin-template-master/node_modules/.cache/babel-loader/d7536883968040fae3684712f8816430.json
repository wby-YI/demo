{"remainingRequest":"C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\src\\views\\acl\\user\\list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\src\\views\\acl\\user\\list.vue","mtime":1653286078295},{"path":"C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\babel.config.js","mtime":1637306514000},{"path":"C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652600907899},{"path":"C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1652600964560},{"path":"C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652600907899},{"path":"C:\\Users\\xiao\\Desktop\\vue_project\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1652600973833}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["name","data","listLoading","searchObj","username","tempSearchObj","selectedIds","users","page","limit","total","user","dialogUserVisible","userRules","required","message","min","password","validator","loading","dialogRoleVisible","allRoles","userRoleIds","isIndeterminate","checkAll","created","methods","showAssignRole","handleCheckAllChange","value","getRoles","result","allRolesList","assignRoles","handleCheckedChange","assignRole","userId","roleIds","window","resetRoleData","validatePassword","rule","callback","search","resetSearch","showAddUser","revomveUsers","catch","handleSelectionChange","selection","showUpdateUser","removeUser","id","getUsers","items","handleSizeChange","pageSize","cancel","addOrUpdate"],"sourceRoot":"src/views/acl/user","sources":["list.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-form inline>\n      <!-- 表单元素 -->\n      <el-form-item>\n         <el-input v-model=\"tempSearchObj.username\" placeholder=\"用户名\" />\n      </el-form-item>\n      <!-- 查询与清空的按钮 -->\n      <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"search\">查询</el-button>\n      <el-button type=\"default\" @click=\"resetSearch\">清空</el-button>\n    </el-form>\n\n    <div style=\"margin-bottom: 20px\">\n      <!-- 添加与批量添加按钮 -->\n      <el-button type=\"primary\" @click=\"showAddUser\">添 加</el-button>\n      <el-button type=\"danger\" @click=\"revomveUsers\" :disabled=\"selectedIds.length===0\"\n        >批量删除</el-button>\n    </div>\n\n    <!-- table表格：展示用户信息的地方 -->\n    <el-table\n      border\n      stripe\n      v-loading=\"listLoading\"\n      :data=\"users\"\n      @selection-change=\"handleSelectionChange\">\n\n      <el-table-column\n        type=\"selection\"\n        width=\"55\" />\n\n      <el-table-column\n        type=\"index\"\n        label=\"序号\"\n        width=\"80\"\n        align=\"center\"\n      />\n\n      <el-table-column prop=\"username\" label=\"用户名\" width=\"150\" />\n      <el-table-column prop=\"nickName\" label=\"用户昵称\" />\n      <el-table-column prop=\"roleName\" label=\"权限列表\" />\n      \n      <el-table-column prop=\"gmtCreate\" label=\"创建时间\" width=\"180\"/>\n      <el-table-column prop=\"gmtModified\" label=\"更新时间\" width=\"180\"/>\n\n      <el-table-column label=\"操作\" width=\"230\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <HintButton type=\"info\" size=\"mini\" icon=\"el-icon-user-solid\" title=\"分配角色\"\n            @click=\"showAssignRole(row)\"/>\n          <HintButton type=\"primary\" size=\"mini\" icon=\"el-icon-edit\" title=\"修改用户\"\n            @click=\"showUpdateUser(row)\"/>\n          <el-popconfirm :title=\"`确定删除 ${row.username} 吗?`\" @onConfirm=\"removeUser(row.id)\">\n            <HintButton style=\"margin-left:10px\" slot=\"reference\" type=\"danger\" size=\"mini\" icon=\"el-icon-delete\" \n              title=\"删除用户\"/>\n          </el-popconfirm>\n        </template>\n      </el-table-column>\n    </el-table>\n    <!-- 分页器 -->\n    <el-pagination\n      :current-page=\"page\"\n      :total=\"total\"\n      :page-size=\"limit\"\n      :page-sizes=\"[3, 10, 20, 30, 40, 50, 100]\"\n      style=\"padding: 20px 0;\"\n      layout=\"prev, pager, next, jumper, ->, sizes, total\"\n      @current-change=\"getUsers\"\n      @size-change=\"handleSizeChange\"\n    />\n    <!-- 对话框的结构 -->\n    <el-dialog :title=\"user.id ? '修改用户' : '添加用户'\" :visible.sync=\"dialogUserVisible\">\n      <el-form ref=\"userForm\" :model=\"user\" :rules=\"userRules\" label-width=\"120px\">\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input v-model=\"user.username\"/>\n        </el-form-item>\n        <el-form-item label=\"用户昵称\">\n          <el-input v-model=\"user.nickName\"/>\n        </el-form-item>\n        \n        <el-form-item v-if=\"!user.id\" label=\"用户密码\" prop=\"password\">\n          <el-input v-model=\"user.password\"/>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"cancel\">取 消</el-button>\n        <el-button :loading=\"loading\" type=\"primary\" @click=\"addOrUpdate\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog title=\"设置角色\" :visible.sync=\"dialogRoleVisible\" :before-close=\"resetRoleData\">\n      <el-form label-width=\"80px\">\n        <el-form-item label=\"用户名\">\n          <el-input disabled :value=\"user.username\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"角色列表\">\n          <el-checkbox :indeterminate=\"isIndeterminate\" v-model=\"checkAll\" @change=\"handleCheckAllChange\">全选</el-checkbox>\n          <div style=\"margin: 15px 0;\"></div>\n          <el-checkbox-group v-model=\"userRoleIds\" @change=\"handleCheckedChange\">\n            <el-checkbox v-for=\"role in allRoles\" :key=\"role.id\" :label=\"role.id\">{{role.roleName}}</el-checkbox>\n          </el-checkbox-group>\n        </el-form-item>\n      </el-form>\n\n      <div slot=\"footer\">\n        <el-button :loading=\"loading\" type=\"primary\" @click=\"assignRole\">保存</el-button>\n        <el-button @click=\"resetRoleData\">取消</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport cloneDeep from 'lodash/cloneDeep'\n\nexport default {\n  name: 'AclUserList',\n\n  data () {\n    return {\n      listLoading: false, // 是否显示列表加载的提示\n      searchObj: { // 包含请求搜索条件数据的对象\n        username: ''\n      },\n      tempSearchObj: { // 收集搜索条件输入的对象\n        username: ''\n      },\n      selectedIds: [], // 所有选择的user的id的数组\n      users: [], // 当前页的用户列表\n      page: 1, // 当前页码\n      limit: 3, // 每页数量\n      total: 0, // 总数量\n      user: {}, // 当前要操作的user\n      dialogUserVisible: false, // 是否显示用户添加/修改的dialog\n      userRules: { // 用户添加/修改表单的校验规则\n        username: [\n          { required: true, message: '用户名必须输入' },\n          { min: 4, message: '用户名不能小于4位' }\n        ],\n        password: [\n          { required: true, validator: this.validatePassword }\n        ]\n      },\n      loading: false, // 是否正在提交请求中\n      dialogRoleVisible: false, // 是否显示角色Dialog\n      allRoles: [], // 所有角色列表\n      userRoleIds: [], // 用户的角色ID的列表\n      isIndeterminate: false, // 是否是不确定的\n      checkAll: false, // 是否全选\n    }\n  },\n\n  //发请求一般情况下，我们都是在mounted去发，但是也可以在created内部去发\n  created () {\n    this.getUsers()\n  },\n\n  methods: {\n    /* \n    显示指定角色的界面\n    */\n    showAssignRole (user) {\n      this.user = user\n      this.dialogRoleVisible = true\n      this.getRoles()\n    },\n\n    /* \n    全选勾选状态发生改变的监听\n    */\n    handleCheckAllChange (value) {// value 当前勾选状态true/false\n      // 如果当前全选, userRoleIds就是所有角色id的数组, 否则是空数组\n      this.userRoleIds = value ? this.allRoles.map(item => item.id) : []\n      // 如果当前不是全选也不全不选时, 指定为false\n      this.isIndeterminate = false\n    },\n\n    /* \n    异步获取用户的角色列表\n    */\n    async getRoles () {\n      const result = await this.$API.user.getRoles(this.user.id)\n      const {allRolesList, assignRoles} = result.data\n      this.allRoles = allRolesList\n      this.userRoleIds = assignRoles.map(item => item.id)\n      \n      this.checkAll = allRolesList.length===assignRoles.length\n      this.isIndeterminate = assignRoles.length>0 && assignRoles.length<allRolesList.length\n    },\n\n    /* \n    角色列表选中项发生改变的监听\n    */\n    handleCheckedChange (value) {\n      const {userRoleIds, allRoles} = this\n      this.checkAll = userRoleIds.length === allRoles.length && allRoles.length>0\n      this.isIndeterminate = userRoleIds.length>0 && userRoleIds.length<allRoles.length\n    },\n\n    /* \n    请求给用户进行角色授权\n    */\n    async assignRole () {\n      const userId = this.user.id\n      const roleIds = this.userRoleIds.join(',')\n      this.loading = true\n      const result = await this.$API.user.assignRoles(userId, roleIds)\n      this.loading = false\n      this.$message.success(result.message || '分配角色成功')\n      this.resetRoleData()\n\n      // console.log(this.$store.getters.name, this.user)\n      if (this.$store.getters.name===this.user.username) {\n        window.location.reload()\n      }\n    },\n\n    /* \n    重置用户角色的数据\n    */\n    resetRoleData () {\n      this.dialogRoleVisible = false\n      this.allRoles = []\n      this.userRoleIds = []\n      this.isIndeterminate = false\n      this.checkAll = false\n    },\n\n    /* \n    自定义密码校验\n    */\n    validatePassword (rule, value, callback) {\n      if (!value) {\n        callback('密码必须输入')\n      } else if (!value || value.length < 6) {\n        callback('密码不能小于6位')\n      } else {\n        callback()\n      }\n    },\n    /* \n    根据输入进行搜索\n    */\n    search () {\n      this.searchObj = {...this.tempSearchObj}\n      this.getUsers()\n    },\n\n    /* \n    重置输入后搜索\n    */\n    resetSearch () {\n      this.searchObj = {\n        username: ''\n      }\n      this.tempSearchObj = {\n        username: ''\n      }\n      this.getUsers()\n    },\n\n    /* \n    显示添加用户的界面\n    */\n    showAddUser () {\n      this.user = {}\n      this.dialogUserVisible = true\n\n      this.$nextTick(() => this.$refs.userForm.clearValidate())\n    },\n\n    /* \n    删除所有选中的用户\n    */\n    revomveUsers () {\n      this.$confirm('确定删除吗?').then(async () => {\n        await this.$API.user.removeUsers(this.selectedIds)\n        this.$message.success('删除成功')\n        this.getUsers()\n      }).catch(() => {\n        this.$message.info('取消删除')\n      })\n    },\n\n    /* \n    列表选中状态发生改变的监听回调\n    */\n    handleSelectionChange (selection) {\n      this.selectedIds = selection.map(item => item.id)\n    },\n\n    /* \n    显示更新用户的界面\n    */\n    showUpdateUser (user) {\n      this.user = cloneDeep(user)\n      this.dialogUserVisible = true\n    },\n\n    /* \n    删除某个用户\n    */\n    async removeUser (id) {\n      await this.$API.user.removeById(id)\n      this.$message.success('删除成功')\n      this.getUsers(this.users.length===1 ? this.page-1 : this.page)\n    },\n\n    /* \n    获取分页列表\n    */\n    async getUsers (page=1) {\n      this.page = page\n      const {limit, searchObj} = this\n      this.listLoading = true\n      const result = await this.$API.user.getPageList(page, limit, searchObj)\n      this.listLoading = false\n      const {items, total} = result.data\n      this.users = items.filter(item => item.username!=='admin')\n      this.total = total-1\n      this.selectedIds = []\n    },\n\n    /* \n    处理pageSize发生改变的监听回调\n    */\n    handleSizeChange (pageSize) {\n      this.limit = pageSize\n      this.getUsers()\n    },\n\n    /* \n    取消用户的保存或更新\n    */\n    cancel () {\n      this.dialogUserVisible = false\n      this.user = {}\n    },\n\n    /* \n    保存或者更新用户\n    */\n    addOrUpdate () {\n      this.$refs.userForm.validate(valid => {\n        if (valid) {\n          const {user} = this\n          this.loading = true\n          this.$API.user[user.id ? 'update' : 'add'](user).then((result) => {\n            this.loading = false\n            this.$message.success('保存成功!')\n            this.getUsers(user.id ? this.page : 1)\n            this.user = {}\n            this.dialogUserVisible = false\n          })\n        }\n      })\n    }\n  }\n}\n</script>\n"]}]}